input_boolean:
  service_mode:
    name: Service Mode
    icon: mdi:broom

automations:
  - id: 42222902-9b85-45fc-b0fd-1106768424c1
    alias: Service mode set home status
    trigger:
      - platform: template
        template_value: >-
          {{ states('input_select.home_status') in
             ['Away', 'Vacation', 'Service', 'Service Expected'] }}
      - platform: state
        entity_id: input_boolean.service_mode
    condition:
      condition:
        - alias: "Verify that this automation didn't trigger"
          condition: template
          value_template: >-
            {{ trigger.to_state.context.parent_id == None or 
               (trigger.to_state.context.id != this.context.id and 
               trigger.to_state.context.parent_id != this.context.id) }}
    action:
      - alias: "Vary response on what triggered"
        choose:
        - conditions: >-
            {{ trigger.entity_id == 'input_select.home_status' }}
          sequence:
            - alias: "Set service mode on home status"
              service: >-
                {% if states("input_select.home_status") in ['Service', 'Service Expected'] -%}
                  input_boolean.turn_on
                {%- else -%}
                  input_boolean.turn_off
                {%- endif %}
              target:
                entity_id: input_boolean.service_mode
        default:
          - alias: "Set home status on service mode"
            choose:
            - conditions:
                - "{{ states('input_select.home_status') != 'Alert' }}"
                - alias: "Service mode on"
                  condition: state
                  entity_id: input_boolean.service_mode
                  state: "on"
              sequence:
                - alias: "Set home status"
                  service: input_select.set_options
                  target:
                    entity_id: input_select.home_status
                  data:
                    option: >-
                      {% if states("input_select.home_status") in ['Normal', 'Service'] -%}
                        Service
                      {%- else -%}
                        Service Expected
                      {%- endif %}
            - conditions:
                - "{{ states('input_select.home_status') in ['Service', 'Service Expected'] }}"
                - alias: "Service mode off"
                  condition: state
                  entity_id: input_boolean.guest_mode
                  state: "off"
              sequence:
                - alias: "Set home status"
                  service: input_select.set_options
                  target:
                    entity_id: input_select.home_status
                  data:
                    option: >-
                      {% if states("input_select.home_status") == "Service" -%}
                        Normal
                      {%- else -%}
                        Away
                      {%- endif %}
