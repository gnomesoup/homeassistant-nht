group:
  locks_all:
    name: "All Locks"
    entities:
      - lock.touchscreen_electronic_deadbolt
      - lock.touchscreen_electronic_deadbolt_2
      - lock.touchscreen_electronic_deadbolt_3

lock:
  - platform: template
    name: All Locks
    value_template: >-
      {{
        is_state('lock.touchscreen_electronic_deadbolt', 'locked') and
        is_state('lock.touchscreen_electronic_deadbolt_2', 'locked') and
        is_state('lock.touchscreen_electronic_deadbolt_3', 'locked')
      }}
    lock:
      service: lock.lock
      target:
        entity_id:
          - lock.touchscreen_electronic_deadbolt
          - lock.touchscreen_electronic_deadbolt_2
          - lock.touchscreen_electronic_deadbolt_3
    unlock:
      service: lock.unlock
      target:
        entity_id:
          - lock.touchscreen_electronic_deadbolt
          - lock.touchscreen_electronic_deadbolt_2
          - lock.touchscreen_electronic_deadbolt_3
  - platform: template
    name: Garage Door
    optimistic: True
    value_template: >-
      {{ is_state('binary_sensor.tilt_shock_xs_sensor_access_control_window_door_is_open', 'off')}}
    lock:
      service: switch.turn_on
      target:
        entity_id: switch.multirelay_2
    unlock:
      service: switch.turn_on
      target:
        entity_id: switch.multirelay_2

automation:
  - id: 74ffe94e-c2e3-43c3-9eef-395ae0e81a38
    alias: Lock locks when it's late
    trigger:
      - platform: time_pattern
        minutes: "0"
    condition:
      - alias: "Only when it's late"
        condition: time
        after: "23:00:00"
        before: "05:00:00"
      - alias: "Not in guest mode"
        condition: state
        entity_id: input_boolean.guest_mode
        state: "off"
      - alias: "All locks not locked"
        condition: state
        entity_id: lock.all_locks
        state: "unlocked"
    action:
      - alias: "Run lock deadbolts scrips"
        service: script.lock_deadbolts_if_doors_shut

script:
  lock_deadbolts_if_doors_shut:
    alias: "Lock locks or notify if open"
    sequence:
      - alias: "Notify if doors open"
        choose:
        - conditions:
            - alias: "Check if door with lock is open"
              condition: state
              entity_id: group.door_sensors_simply_safe
              state: "on"
          sequence:
            - alias: "Notify if door sensor open"
              service: script.notify_parents
              data:
                alert_level: Info
                title: Taliluna Security
                message: >-
                  Cannot lock {{ expand('group.door_sensors_simply_safe')
                    | selectattr("state", "==", "on")
                    | map(attribute='attributes.friendly_name')
                    | list
                    | join(", ") }}
      - alias: "Lock only if door is closed"
        choose:
        - conditions:
            - alias: "Front door closed"
              condition: state
              entity_id: binary_sensor.front_door_entry
              state: "off"
          sequence:
            - alias: "Lock front door"
              service: lock.lock
              target:
                entity_id: lock.touchscreen_electronic_deadbolt
        - conditions:
            - alias: "Back door closed"
              condition: state
              entity_id: binary_sensor.back_door_entry
              state: "off"
          sequence:
            - alias: "Lock back door"
              service: lock.lock
              target:
                entity_id: lock.touchscreen_electronic_deadbolt_2
        - conditions:
            - alias: "Laundry door closed"
              condition: state
              entity_id: binary_sensor.laundry_door_entry
              state: "off"
          sequence:
            - alias: "Lock laundry door"
              service: lock.lock
              target:
                entity_id: lock.touchscreen_electronic_deadbolt_3